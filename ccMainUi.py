# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ccMainUi.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_ccMain(object):
    def setupUi(self, ccMain):
        ccMain.setObjectName("ccMain")
        ccMain.setEnabled(True)
        ccMain.resize(1305, 791)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(ccMain.sizePolicy().hasHeightForWidth())
        ccMain.setSizePolicy(sizePolicy)
        ccMain.setMinimumSize(QtCore.QSize(950, 450))
        self.centralwidget = QtWidgets.QWidget(ccMain)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.mplWidget = MplWidget(self.centralwidget)
        self.mplWidget.setObjectName("mplWidget")
        self.verticalLayout.addWidget(self.mplWidget)
        ccMain.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ccMain)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1305, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        ccMain.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ccMain)
        self.statusbar.setObjectName("statusbar")
        ccMain.setStatusBar(self.statusbar)
        self.resultsDock = QtWidgets.QDockWidget(ccMain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.resultsDock.sizePolicy().hasHeightForWidth())
        self.resultsDock.setSizePolicy(sizePolicy)
        self.resultsDock.setMinimumSize(QtCore.QSize(0, 0))
        self.resultsDock.setObjectName("resultsDock")
        self.resultsDockContents = QtWidgets.QWidget()
        self.resultsDockContents.setObjectName("resultsDockContents")
        self.resultsDockLayout = QtWidgets.QVBoxLayout(self.resultsDockContents)
        self.resultsDockLayout.setContentsMargins(0, 0, 0, 0)
        self.resultsDockLayout.setSpacing(0)
        self.resultsDockLayout.setObjectName("resultsDockLayout")
        self.resultTable = QtWidgets.QTableView(self.resultsDockContents)
        self.resultTable.setObjectName("resultTable")
        self.resultsDockLayout.addWidget(self.resultTable)
        self.resultsDock.setWidget(self.resultsDockContents)
        ccMain.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.resultsDock)
        self.logDock = QtWidgets.QDockWidget(ccMain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.logDock.sizePolicy().hasHeightForWidth())
        self.logDock.setSizePolicy(sizePolicy)
        self.logDock.setMinimumSize(QtCore.QSize(400, 100))
        self.logDock.setObjectName("logDock")
        self.logDockContents = QtWidgets.QWidget()
        self.logDockContents.setObjectName("logDockContents")
        self.logDockLayout = QtWidgets.QVBoxLayout(self.logDockContents)
        self.logDockLayout.setContentsMargins(0, 0, 0, 0)
        self.logDockLayout.setSpacing(0)
        self.logDockLayout.setObjectName("logDockLayout")
        self.logOutput = QtWidgets.QTextBrowser(self.logDockContents)
        self.logOutput.setObjectName("logOutput")
        self.logDockLayout.addWidget(self.logOutput)
        self.logDock.setWidget(self.logDockContents)
        ccMain.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.logDock)
        self.scanDock = QtWidgets.QDockWidget(ccMain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scanDock.sizePolicy().hasHeightForWidth())
        self.scanDock.setSizePolicy(sizePolicy)
        self.scanDock.setMinimumSize(QtCore.QSize(375, 200))
        self.scanDock.setObjectName("scanDock")
        self.scanDockContents = QtWidgets.QWidget()
        self.scanDockContents.setObjectName("scanDockContents")
        self.scanGroup = QtWidgets.QGroupBox(self.scanDockContents)
        self.scanGroup.setGeometry(QtCore.QRect(10, 10, 351, 261))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scanGroup.sizePolicy().hasHeightForWidth())
        self.scanGroup.setSizePolicy(sizePolicy)
        self.scanGroup.setMinimumSize(QtCore.QSize(175, 0))
        self.scanGroup.setObjectName("scanGroup")
        self.layoutWidget = QtWidgets.QWidget(self.scanGroup)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 20, 321, 201))
        self.layoutWidget.setObjectName("layoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.layoutWidget)
        self.formLayout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.nameLabel = QtWidgets.QLabel(self.layoutWidget)
        self.nameLabel.setObjectName("nameLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.nameLabel)
        self.nameEdit = QtWidgets.QLineEdit(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nameEdit.sizePolicy().hasHeightForWidth())
        self.nameEdit.setSizePolicy(sizePolicy)
        self.nameEdit.setObjectName("nameEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.nameEdit)
        self.radioRElf = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioRElf.setChecked(True)
        self.radioRElf.setObjectName("radioRElf")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.radioRElf)
        self.editFactorsButton = QtWidgets.QToolButton(self.layoutWidget)
        self.editFactorsButton.setToolTip("")
        self.editFactorsButton.setObjectName("editFactorsButton")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.editFactorsButton)
        self.radioREmf = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioREmf.setObjectName("radioREmf")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.radioREmf)
        self.radioREhf = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioREhf.setObjectName("radioREhf")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.radioREhf)
        self.radioCE = QtWidgets.QRadioButton(self.layoutWidget)
        self.radioCE.setObjectName("radioCE")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.radioCE)
        self.cancelButton = QtWidgets.QPushButton(self.layoutWidget)
        self.cancelButton.setEnabled(False)
        self.cancelButton.setObjectName("cancelButton")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.cancelButton)
        self.runButton = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.runButton.sizePolicy().hasHeightForWidth())
        self.runButton.setSizePolicy(sizePolicy)
        self.runButton.setObjectName("runButton")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.runButton)
        self.scanDock.setWidget(self.scanDockContents)
        ccMain.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.scanDock)
        self.actionAbout = QtWidgets.QAction(ccMain)
        self.actionAbout.setObjectName("actionAbout")
        self.actionExit = QtWidgets.QAction(ccMain)
        self.actionExit.setObjectName("actionExit")
        self.actionSettings = QtWidgets.QAction(ccMain)
        self.actionSettings.setObjectName("actionSettings")
        self.actionSave = QtWidgets.QAction(ccMain)
        self.actionSave.setObjectName("actionSave")
        self.actionViewResults = QtWidgets.QAction(ccMain)
        self.actionViewResults.setCheckable(True)
        self.actionViewResults.setChecked(True)
        self.actionViewResults.setObjectName("actionViewResults")
        self.actionViewLogOutput = QtWidgets.QAction(ccMain)
        self.actionViewLogOutput.setCheckable(True)
        self.actionViewLogOutput.setChecked(False)
        self.actionViewLogOutput.setObjectName("actionViewLogOutput")
        self.actionViewScan = QtWidgets.QAction(ccMain)
        self.actionViewScan.setCheckable(True)
        self.actionViewScan.setChecked(True)
        self.actionViewScan.setObjectName("actionViewScan")
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionExit)
        self.menuView.addAction(self.actionViewScan)
        self.menuView.addAction(self.actionViewResults)
        self.menuView.addAction(self.actionViewLogOutput)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(ccMain)
        self.runButton.clicked.connect(ccMain.runSlot)
        self.actionSettings.triggered.connect(ccMain.showSettingsSlot)
        self.actionExit.triggered.connect(ccMain.close)
        self.radioCE.clicked.connect(ccMain.ceSelectSlot)
        self.radioREhf.clicked.connect(ccMain.hfSelectSlot)
        self.radioREmf.clicked.connect(ccMain.mfSelectSlot)
        self.radioRElf.clicked.connect(ccMain.lfSelectSlot)
        self.nameEdit.returnPressed.connect(ccMain.runSlot)
        self.actionViewResults.toggled['bool'].connect(ccMain.toggleResultsSlot)
        self.actionViewLogOutput.toggled['bool'].connect(ccMain.toggleLogSlot)
        self.resultsDock.visibilityChanged['bool'].connect(ccMain.resultDockChangedSlot)
        self.logDock.visibilityChanged['bool'].connect(ccMain.logDockChangedSlot)
        self.cancelButton.clicked.connect(ccMain.cancelSlot)
        self.actionViewScan.triggered.connect(ccMain.toggleScanSlot)
        self.scanDock.visibilityChanged['bool'].connect(ccMain.scanDockChangedSlot)
        self.editFactorsButton.clicked.connect(ccMain.editFactorsSlot)
        QtCore.QMetaObject.connectSlotsByName(ccMain)

    def retranslateUi(self, ccMain):
        _translate = QtCore.QCoreApplication.translate
        ccMain.setWindowTitle(_translate("ccMain", "EasyCC"))
        self.menuFile.setTitle(_translate("ccMain", "File"))
        self.menuView.setTitle(_translate("ccMain", "View"))
        self.resultsDock.setWindowTitle(_translate("ccMain", "Results"))
        self.logDock.setWindowTitle(_translate("ccMain", "Log Output"))
        self.scanDock.setWindowTitle(_translate("ccMain", "Scan Parameters"))
        self.scanGroup.setTitle(_translate("ccMain", "Scan"))
        self.nameLabel.setText(_translate("ccMain", "Name: "))
        self.radioRElf.setText(_translate("ccMain", "RE 30MHz - 1GHz"))
        self.editFactorsButton.setText(_translate("ccMain", "Edit Factors"))
        self.radioREmf.setText(_translate("ccMain", "RE 1GHz - 18GHz"))
        self.radioREhf.setText(_translate("ccMain", "RE 18GHz - 40GHz"))
        self.radioCE.setText(_translate("ccMain", "CE 150kHz - 30MHz"))
        self.cancelButton.setText(_translate("ccMain", "Cancel"))
        self.runButton.setText(_translate("ccMain", "Run"))
        self.actionAbout.setText(_translate("ccMain", "About"))
        self.actionExit.setText(_translate("ccMain", "Exit"))
        self.actionExit.setShortcut(_translate("ccMain", "Ctrl+Q"))
        self.actionSettings.setText(_translate("ccMain", "Se&ttings"))
        self.actionSettings.setToolTip(_translate("ccMain", "Settings"))
        self.actionSettings.setShortcut(_translate("ccMain", "Ctrl+T"))
        self.actionSave.setText(_translate("ccMain", "&Save"))
        self.actionSave.setShortcut(_translate("ccMain", "Ctrl+S"))
        self.actionViewResults.setText(_translate("ccMain", "&Results"))
        self.actionViewResults.setShortcut(_translate("ccMain", "Ctrl+R"))
        self.actionViewLogOutput.setText(_translate("ccMain", "&Log Output"))
        self.actionViewLogOutput.setShortcut(_translate("ccMain", "Ctrl+L"))
        self.actionViewScan.setText(_translate("ccMain", "Scan"))
from mplwidget import MplWidget
